to abc :x :y
  op word :y :x
end

show apply "word [1 2 3]
show apply "abc [1 2]

apply [show (list ?1 ?2 ?1)][1 3]
show apply [(list ?1 ?2 ?1)][1 3] ; [1 3 1]
show apply [word ? ?][1]
show apply [list ? ?][1]

apply [type ? apply [type ?] (list ?+1) type ?] [3]

pr "\n

make "template "word show apply :template [1 2 3]
make "template "abc show apply :template [1 2]

make "template [show (list ?1 ?2 ?1)] apply :template [1 3]
make "template [(list ?1 ?2 ?1)] show apply :template [1 3] ; [1 3 1]
make "template [word ? ?] show apply :template[1]
make "template [list ? ?] show apply :template[1]

make "template [type ? apply [type ?] (list ?+1) type ?] apply :template[3]
