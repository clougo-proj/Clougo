to catch_test0
  type "test0:
  catch "error [1+2]
  output "ok
end

to catch_test0i
  type "test0i:
  catch "error word "1+ "2
  output "ok
end

to catch_test1
  type "test1:
  catch "error [output "ok]
  output "failed
end

to catch_test1i
  type "test1i:
  catch "error (list "output "\"ok )
  output "failed
end

to catch_test2
  type "test2:
  catch "endloop [
    repeat 10 [
      if (1 > 2) [throw "endloop]
    ]
  ]
  output "ok
end

to test2i_helper
  repeat 10 [
    if (1 > 2) [throw "endloop]
  ]
end

to catch_test2i
  type "test2i:
  catch "endloop "test2i_helper
  output "ok
end

to true
  pr "ok
end

to catch_test3
  type "test3:
  catch "label 1 < 2
end

to catch_instrlist
  type "test_instrlist:
  localmake "instrList [throw "mytag output "error]
  catch "mytag :instrlist
  output "ok
end

pr catch_test0
pr catch_test0i
pr catch_test1
pr catch_test1i
pr catch_test2
pr catch_test2i
catch_test3
pr catch_instrlist
