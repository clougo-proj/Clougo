to f
  op [1 2]
end
pr "string
show equal? "abc "abc
show equalp "abc "abc
show "abc = "abc
show equal? "ab "abc
show equalp "ab "abc
show "ab = "abc
show equal? "abc "ab
show equalp "abc "ab
show "abc = "ab

pr "
pr [abc output from proc]
show equal? "abc word "a "bc
show equalp "abc word "a "bc
show equal? word "a "bc "abc
show equalp word "a "bc "abc
show equal? word "a "bc word "ab "c
show equalp word "a "bc word "ab "c
show "abc = word "a "bc

pr "
pr [numeric vs. parsed numeric]
show equal? 0.01 "1e-2
show equalp 0.01 "1e-2
show 0.01="1e-2
show equal? "0.01 1e-2
show equalp "0.01 1e-2
show "0.01 = 1e-2
show equal? "0.010 1e-2
show equalp "0.010 1e-2
show "0.010 = 1e-2

pr "
pr [boolean]
show equal? "true "true
show equal? "true "false
show equal? "false "true
show equal? "false "false
show equal? "true not "false
show equal? "false not "true
show equal? not "true "false
show equal? not "false "true
show equal? "true []
show equal? "false []
show equal? "true {}
show equal? "false {}
show equal? [] "true
show equal? [] "false
show equal? {} "true
show equal? {} "false

pr "
pr [lists]
show equal? [1 2] [1 2]
show equalp [1 2] [1 2]
show [1 2] = [1 2]
show[1 2]=f
show f = [1 2]
show equal? [2 1] [1 2]
show equalp [2 1] [1 2]
show [2 1] = [1 2]
show equal? [1 2] [2 1]
show equalp [1 2] [2 1]
show [1 2] = [2 1]

pr "
pr [compounds]
show equal? [abc [def [true]]] [abc [def [true]]]
show equalp [abc [def [true]]] [abc [def [true]]]
show [abc [def [true]]]=[abc [def [true]]]
show equal? [abc [def [false]]] [abc [def [false]]]
show equalp [abc [def [false]]] [abc [def [false]]]
show [abc [def [false]]]=[abc [def [false]]]
show equal? (se not "true "true) (se "false not "false)
show equalp (se not "true "true) (se "false not "false)
show (se not "true "true)=(se "false not "false) ; bug

pr "
pr [not equal]
show equal? 1e-6+1e10 12*(2e-9+2)
show equalp 1e-6+1e10 12*(2e-9+2)
show 1e-6+1e10=12*(2e-9+2)
